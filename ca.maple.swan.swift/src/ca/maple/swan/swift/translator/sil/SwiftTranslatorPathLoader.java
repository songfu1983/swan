//===--- SwiftTranslatorPathLoader.java ----------------------------------===//
//
// This source file is part of the SWAN open source project
//
// Copyright (c) 2019 Maple @ University of Alberta
// All rights reserved. This program and the accompanying materials (unless
// otherwise specified by a license inside of the accompanying material)
// are made available under the terms of the Eclipse Public License v2.0
// which accompanies this distribution, and is available at
// http://www.eclipse.org/legal/epl-v20.html
//
//===---------------------------------------------------------------------===//

package ca.maple.swan.swift.translator.sil;

/*
 * This [janky] class is needed for now due to the fact that we are using a
 * shared library generated by the C++ side.
 */

public class SwiftTranslatorPathLoader {

    public static void load() {
        String sharedDir = "/ca.maple.swan.translator/build/libs/swiftWala/shared/";
        String libName = "libswiftWala";

        String SWANDir = "";
        try {
            SWANDir = System.getenv("PATH_TO_SWAN");
            if (SWANDir.equals("null")) {
                throw new Exception();
            }
        } catch (Exception e) {
            System.err.println("Error: PATH_TO_SWAN path not set! Exiting...");
            e.printStackTrace();
            System.exit(1);
        }

        // Try to load both dylib and so (instead of checking OS).
        try {
            System.load(SWANDir + sharedDir + libName + ".dylib");
        } catch (UnsatisfiedLinkError dylibException) {
            dylibException.printStackTrace();
            try {
                System.load(SWANDir + sharedDir + libName + ".so");
            } catch (UnsatisfiedLinkError soException) {
                String errorMsg = "Could not find shared library! Possible reasons:\n" +
                        "    1. set(PACKAGES_DIR \"${CMAKE_CURRENT_SOURCE_DIR}/../packages/\") is uncommented in \n" +
                        "       ca.maple.swan.translator/CMakeLists.txt" +
                        "    2. ca.maple.swan.translator/build/libs/swiftWala/shared/libswiftWala.* doesn't exist" +
                        "    3. packages/WALA/com.ibm.wala.cast/cast/build/lib/main/debug/libcast.* doesn't exist\n" +
                        "NOTE: If .dylib isn't found, we try to find .so. Therefore, the stack trace shows a soException.";
                System.err.println(errorMsg);
                soException.printStackTrace();
            }
        }
    }
}
